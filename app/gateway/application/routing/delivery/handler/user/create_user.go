// Code generated by gkit. DO NOT EDIT.
package user

import (
    

    "gateway/package/settings"
    "gateway/proto/user"
    
    "gateway/package/wrapper"
    "gateway/package/monitor"
    "go.elastic.co/apm/v2"
    
)

type createUserHandler struct {
}

func NewCreateUserHandler(cfg *settings.Config) *createUserHandler {
    return &createUserHandler{}
}

//	@Summary	permission: 
//	@Tags		UserService
//	@Accept		json
//	@Produce	json
//	@Param		email			body		string					false	"<param_description>"
//	@Param		password		body		string					false	"<param_description>"
//	@Param		first_name		body		string					false	"<param_description>"
//	@Param		last_name		body		string					false	"<param_description>"
//	@Param		phone_number	body		string					false	"<param_description>"
//	@Param		avatar			body		string					false	"<param_description>"
//	@Param		birth_date		body		string					false	"<param_description>"
//	@Param		body			body		user.CreateUserRequest	true	"Body example"
//	@Success	200				{object}	user.CreateUserResponse
//	@Router		/api/v1/user-service/user [post]
func (handler *createUserHandler) Handle(ctx *wrapper.Context) (interface{}, error) {
    monitor.SetApmContext(apm.DetachedContext(ctx.Request.Context()))
    data := user.CreateUserRequest{}
    if err := ctx.BindJSON(&data); err != nil {
        return nil, err
    }

    return &data, nil
}
