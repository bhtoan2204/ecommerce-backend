services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # consul:
  #   image: consul:1.20
  #   ports:
  #     - "8500:8500"   # Web UI
  #     - "8600:8600/udp"
  #   command: agent -dev -client=0.0.0.0

  # envoy:
  #   image: envoyproxy/envoy:v1.29-latest
  #   ports:
  #     - "8080:8080"
  #     - "9901:9901"
  #   volumes:
  #     - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
  #   depends_on:
  #     - consul

  gateway-service:
    build:
      context: ./
      dockerfile: ./app/gateway/Dockerfile
    ports:
      - "8080:8080"
    command: ./gateway

  user-service:
    build:
      context: ./
      dockerfile: ./app/user/Dockerfile
    ports:
      - "5010:5010"
    command: ./user

volumes:
  postgres_data:
  
  